{"version":3,"sources":["components/TabPanel.js","constants.js","actions/index.js","components/Login.js","utils/jwt.js","utils/api.js","components/Signup.js","pages/Registration.js","components/AppContainer.js","components/CreateBoard.js","components/Header/Header.js","pages/MainPage.js","components/page404.js","components/UpdateOverlay.js","components/GreenButton.js","components/TodoCard.js","pages/Boards.js","pages/Profile.js","components/PrivateRoute.js","App.js","reducers/userReducer.js","reducers/boardsReducer.js","reducers/rootReducer.js","sagas/boardsSaga.js","sagas/userSaga.js","sagas/rootSaga.js","index.js"],"names":["TabPanel","props","children","value","index","other","role","hidden","id","aria-labelledby","Box","p","Typography","component","USER","BOARDS","setUser","user","type","payload","setUserError","error","fetchCurrentUser","LogOutUser","setGetBoardsSuccess","boards","setSpecificBoards","board","connect","login","dispatch","loginUser","Oauth","useState","email","password","loginValues","setLoginValues","handleInputChange","ev","persist","prevState","target","name","responseGoogleSuccess","response","a","profileObj","responseGoogleError","console","log","Grid","container","onSubmit","preventDefault","style","width","variant","fontStyle","my","item","xs","TextField","onChange","placeholder","label","margin","InputLabelProps","shrink","required","fullWidth","inputProps","minLength","maxLength","FormHelperText","color","Button","sx","render","renderProps","onClick","disabled","clientId","onSuccess","onFailure","cookiePolicy","getJwtToken","localStorage","getItem","getCurrentUser","axios","get","headers","Authorization","Accept","fetchLoggedUser","loginvalues","post","loginOauth","profile","RegisterUser","signupvalues","data","changeUserDetails","put","CreateNewBoard","getAllBoards","getSpecificBoard","boardName","addNewCard","card","updateCardItems","patch","deleteCardItems","changeCardTitle","Signup","username","confirmPassword","signup","setSignUp","md","a11yProps","def","useStyles","makeStyles","theme","registrationContainer","flexDirection","height","display","justifyContent","alignItems","breakpoints","down","registration","minHeight","flex","image","classes","history","useHistory","React","setValue","useEffect","isLoggedIn","push","className","Tabs","event","newValue","aria-label","Tab","src","currentUser","location","router","pathname","jwt","obj","prop","hasOwnProperty","isEmpty","openBoard","setOpenBoard","setBoardName","boardColor","setBoardColor","cardRef","useRef","handleColorChange","current","backgroundColor","handleBoardSubmit","Paper","elevation","Card","maxHeight","minWidth","CardHeader","padding","subheader","action","IconButton","ref","CardContent","marginTop","grow","flexGrow","menuButton","marginRight","spacing","title","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","logOut","anchorPopOverEl","setAnchorPopOverEl","open","Boolean","undefined","anchorEl","setAnchorEl","isMenuOpen","handleMenuClose","to","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","AppBar","Toolbar","edge","noWrap","Search","InputBase","root","input","Add","currentTarget","Info","aria-controls","aria-haspopup","AccountCircle","Popover","textAlign","srcset","alt","mainContainer","sideBar","listStyleType","textDecoration","gridItems","paper","useParams","document","Dashboard","Home","map","key","_id","sm","top","right","bottom","left","fontWeight","page404","textarea","resize","overflow","borderImage","borderStyle","borderWidth","boxShadow","fontSize","lineHeight","UpdateOverlay","overlayVar","setOverlay","overlay","handleSubmit","handleDelete","transform","x","y","zIndex","TextareaAutosize","rowsMin","rowsMax","cols","DeleteForever","red","GreenButton","withStyles","green","setBoard","updateBoards","todo","setTodo","toggleAddTodo","setToggleAddTodo","cardTitle","setCardTitle","renderCardTitle","setRenderCardTitle","handleEditButton","getBoundingClientRect","clientX","clientY","cardId","itemId","closest","parentNode","getAttribute","handleCardTitleSubmit","which","handleItemInputChange","handleItemSubmit","config","onKeyPress","cursor","onDoubleClick","droppableId","provided","droppableProps","innerRef","items","i","draggableId","snapshot","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","square","overflowWrap","Edit","href","getOneBoard","specificBoard","cardName","setCardName","setOverlayVar","toggle","setToggle","getOverlayVar","handleButtonToggle","handleCardNameSubmit","onDragEnd","result","destination","source","cards","orange","getContrastText","deepOrange","purple","deepPurple","updateUser","updateCurrentUser","bio","setCurrentUser","Avatar","split","gutterBottom","marginBottom","prev","Component","state","from","token","decoded","decode","exp","Date","now","err","isTokenExpired","exact","path","Registration","MainPage","Boards","Profile","initialState","isLoading","loginReducer","Object","assign","removeItem","window","boardsReducer","rootReducer","combineReducers","connectRouter","callGetAllBoards","callGetOneBoard","boardsSaga","call","takeEvery","LoginUser","updateUserDetails","userSaga","status","setItem","takeLatest","rootSaga","sagas","all","saga","spawn","sagaMiddleware","createSagaMiddleware","createBrowserHistory","store","createStore","compose","applyMiddleware","routerMiddleware","__REDUX_DEVTOOLS_EXTENSION__","serialize","trace","run","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.95cddb88.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`registration-${index}`}\r\n      aria-labelledby={`registration-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography component=\"div\">{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\nexport default TabPanel;\r\n","export const USER = {\r\n  REGISTER_USER: \"REGISTER_USER\",\r\n  REGISTER_USER_SUCCESS: \"REGISTER_USER_SUCCESS\",\r\n  REGISTER_USER_ERROR: \"REGISTER_USER_ERROR\",\r\n  LOGIN_USER: \"LOGIN_USER\",\r\n  LOGIN_USER_SUCCESS: \"LOGIN_USER_SUCCESS\",\r\n  LOGIN_USER_OAUTH: \"LOGIN_USER_OAUTH\",\r\n  LOGIN_USER_ERROR: \"LOGIN_USER_ERROR\",\r\n  LOGOUT_USER: \"LOGOUT_USER\",\r\n  FETCH_CURRENT_USER: \"FETCH_CURRENT_USER\",\r\n  UPDATE_CURRENT_USER: \"UPDATE_CURRENT_USER\",\r\n};\r\n\r\nexport const BOARDS = {\r\n  GET_ALL_BOARDS: \"GET_ALL_BOARDS\",\r\n  GET_ALL_BOARDS_SUCCESS: \"GET_ALL_BOARDS_SUCCESS\",\r\n  GET_ALL_BOARDS_ERROR: \"GET_ALL_BOARDS_ERROR\",\r\n  GET_ONE_BOARD: \"GET_ONE_BOARD\",\r\n  GET_ONE_BOARD_SUCCESS: \"GET_ONE_BOARD_SUCCESS\",\r\n};\r\n","import { USER, BOARDS } from \"./../constants\";\r\nexport const loginUser = (user) => ({\r\n  type: USER.LOGIN_USER,\r\n  payload: { ...user },\r\n});\r\nexport const loginUserOauth = (user) => ({\r\n  type: USER.LOGIN_USER_OAUTH,\r\n  payload: { ...user },\r\n});\r\nexport const setUser = (user) => ({\r\n  type: USER.LOGIN_USER_SUCCESS,\r\n  payload: user,\r\n});\r\n\r\nexport const setUserError = (error) => ({\r\n  type: USER.LOGIN_USER_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport const fetchCurrentUser = () => ({\r\n  type: USER.FETCH_CURRENT_USER,\r\n});\r\n\r\nexport const updateCurrentUser = (payload) => ({\r\n  type: USER.UPDATE_CURRENT_USER,\r\n  payload: payload,\r\n});\r\n// export const RegisterUser = (user) => ({\r\n//   type: USER.REGISTER_USER,\r\n//   payload: { ...user },\r\n// });\r\n\r\n// export const setRegisterSuccess = (bool) => ({\r\n//   type: USER.REGISTER_USER_SUCCESS,\r\n//   success: bool,\r\n// });\r\n\r\n// export const setRegisterError = (bool) => ({\r\n//   type: USER.REGISTER_USER_ERROR,\r\n//   error: bool,\r\n// });\r\n\r\nexport const LogOutUser = () => ({\r\n  type: USER.LOGOUT_USER,\r\n});\r\n//boards\r\n\r\nexport const setGetBoardsSuccess = (boards) => ({\r\n  type: BOARDS.GET_ALL_BOARDS_SUCCESS,\r\n  payload: boards,\r\n});\r\n\r\nexport const setGetBoardsError = (error) => ({\r\n  type: BOARDS.GET_ALL_BOARDS_ERROR,\r\n  payload: error,\r\n});\r\n\r\nexport const getAllBoards = (boards) => ({\r\n  type: BOARDS.GET_ALL_BOARDS,\r\n  payload: boards,\r\n});\r\n\r\nexport const setSpecificBoards = (board) => ({\r\n  type: BOARDS.GET_ONE_BOARD_SUCCESS,\r\n  payload: board,\r\n});\r\n\r\nexport const getSpecificBoard = (payload) => ({\r\n  type: BOARDS.GET_ONE_BOARD,\r\n  payload: payload,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Typography, TextField, Button, Box } from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser, loginUserOauth } from \"./../actions/index\";\r\nimport { FormHelperText } from \"@material-ui/core\";\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nfunction Login({ loginUser, login, Oauth }) {\r\n  const [loginValues, setLoginValues] = useState({ email: \"\", password: \"\" });\r\n  const handleInputChange = (ev) => {\r\n    ev.persist();\r\n    setLoginValues((prevState) => ({\r\n      ...prevState,\r\n      [ev.target.name]: ev.target.value,\r\n    }));\r\n  };\r\n\r\n  const responseGoogleSuccess = async (response) => {\r\n    Oauth(response.profileObj);\r\n  };\r\n  const responseGoogleError = async (response) => {\r\n    console.log(response);\r\n  };\r\n  const handleLoginSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    loginUser(loginValues);\r\n  };\r\n  return (\r\n    <Grid container>\r\n      <form onSubmit={handleLoginSubmit} style={{ width: \"100%\" }}>\r\n        <Typography variant=\"h4\" component=\"div\">\r\n          <Box fontStyle=\"normal\" my={4}>\r\n            Log in\r\n          </Box>\r\n        </Typography>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            value={loginValues.email}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your email here\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            value={loginValues.password}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your password here\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              minLength: 6,\r\n              maxLength: 20,\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <FormHelperText style={{ color: \"red\" }}>{login.error}</FormHelperText>\r\n        <Grid item xs={12}>\r\n          <Button type=\"submit\" color=\"primary\" variant=\"contained\" fullWidth>\r\n            Log in\r\n          </Button>\r\n        </Grid>\r\n        <br />\r\n        <Grid item sx={12}>\r\n          <GoogleLogin\r\n            style={{ width: \"100%\" }}\r\n            render={(renderProps) => (\r\n              <Button\r\n                style={{ width: \"100%\" }}\r\n                onClick={renderProps.onClick}\r\n                disabled={renderProps.disabled}\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n              >\r\n                Sign in with Google\r\n              </Button>\r\n            )}\r\n            clientId=\"937632957539-rgj6ua135uhqo0lnuejibuted9ht71ta.apps.googleusercontent.com\"\r\n            onSuccess={responseGoogleSuccess}\r\n            onFailure={responseGoogleError}\r\n            cookiePolicy={\"single_host_origin\"}\r\n          />\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ login }) => ({\r\n  login,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loginUser: (payload) => {\r\n    dispatch(loginUser(payload));\r\n  },\r\n  Oauth: (payload) => {\r\n    dispatch(loginUserOauth(payload));\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import decode from \"jwt-decode\";\r\n\r\nexport default function getJwtToken() {\r\n  return localStorage.getItem(\"jwt-token\");\r\n}\r\nexport const isTokenExpired = (token) => {\r\n  try {\r\n    const decoded = decode(token);\r\n    console.log(decoded.exp, Date.now() / 1000);\r\n    if (decoded.exp < Date.now() / 1000) {\r\n      return true;\r\n    } else return false;\r\n  } catch (err) {\r\n    return false;\r\n  }\r\n};\r\n","import axios from \"axios\";\r\nimport getJwtToken from \"./jwt\";\r\n\r\n// USER API\r\nexport const getCurrentUser = async (user) => {\r\n  try {\r\n    const user = await axios.get(\"http://localhost:5000/api/user/profile\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getJwtToken(),\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    return user;\r\n  } catch (err) {}\r\n};\r\nexport const fetchLoggedUser = async (loginvalues) => {\r\n  try {\r\n    const user = await axios.post(\r\n      \"http://localhost:5000/api/user/login\",\r\n      loginvalues,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return user;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\nexport const loginOauth = async (profile) => {\r\n  try {\r\n    const user = await axios.post(\r\n      \"http://localhost:5000/api/user/oauth\",\r\n      profile,\r\n      {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return user;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const RegisterUser = async (signupvalues) => {\r\n  try {\r\n    const user = await axios.post(\r\n      \"http://localhost:5000/api/user/register\",\r\n      signupvalues\r\n    );\r\n    return user.data;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\nexport const changeUserDetails = async (payload) => {\r\n  try {\r\n    const user = await axios.put(\r\n      \"http://localhost:5000/api/user/details\",\r\n      payload,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return user;\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n\r\n// BOARD PAGE API\r\nexport const CreateNewBoard = async (payload) => {\r\n  try {\r\n    let board = await axios.post(\r\n      \"http://localhost:5000/api/board/create\",\r\n      payload,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return board;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\n// export const getOneBoard = async (boardName) => {\r\n//   try {\r\n//     let board = await axios.get(\r\n//       `http://localhost:5000/api/board/${boardName}`,\r\n//       config\r\n//     );\r\n//     return board;\r\n//   } catch (err) {}\r\n// };\r\n\r\nexport const getAllBoards = async (payload) => {\r\n  try {\r\n    let board = await axios.get(\r\n      `http://localhost:5000/api/board/${payload}/getAllBoards`,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return board;\r\n  } catch (err) {}\r\n};\r\n\r\n//when the component first mounts\r\nexport const getSpecificBoard = async (boardName) => {\r\n  try {\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getJwtToken(),\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    let board = await axios.get(\r\n      `http://localhost:5000/api/board/${boardName}`,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return board;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n// CARD APIs\r\nexport const addNewCard = async (payload) => {\r\n  try {\r\n    let card = await axios.post(\r\n      `http://localhost:5000/api/board/card/create`,\r\n      payload,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return card;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const addItemToCard = async (payload) => {\r\n  try {\r\n    let item = await axios.post(\r\n      `http://localhost:5000/api/board/card/create`,\r\n      payload,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return item;\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n};\r\n\r\nexport const reOrderCardItems = async (payload) => {\r\n  try {\r\n    const boardCards = await axios.put(\r\n      \"http://localhost:5000/api/board/card/reorder\",\r\n      payload,\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + getJwtToken(),\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\",\r\n        },\r\n      }\r\n    );\r\n    return boardCards;\r\n  } catch (err) {}\r\n};\r\n\r\nexport const updateCardItems = async (payload) => {\r\n  return await axios.patch(\r\n    \"http://localhost:5000/api/board/card/update\",\r\n    payload,\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getJwtToken(),\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const deleteCardItems = async (payload) => {\r\n  return await axios.put(\r\n    \"http://localhost:5000/api/board/card/items\",\r\n    payload,\r\n    {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getJwtToken(),\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\nexport const changeCardTitle = async (payload) => {\r\n  return await axios.put(\"http://localhost:5000/api/board/card\", payload, {\r\n    headers: {\r\n      Authorization: \"Bearer \" + getJwtToken(),\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\",\r\n    },\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Grid, Typography, TextField, Button, Box } from \"@material-ui/core\";\r\nimport { RegisterUser } from \"../utils/api.js\";\r\n\r\nfunction Signup() {\r\n  const [signup, setSignUp] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    email: \"\",\r\n  });\r\n  const handleInputChange = (ev) => {\r\n    ev.persist();\r\n    setSignUp((prevState) => ({\r\n      ...prevState,\r\n      [ev.target.name]: ev.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleFormSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    RegisterUser(signup);\r\n  };\r\n  return (\r\n    <Grid container>\r\n      <Typography variant=\"h4\" component=\"div\">\r\n        <Box fontStyle=\"normal\" my={4}>\r\n          Register\r\n        </Box>\r\n      </Typography>\r\n      <br />\r\n      <form onSubmit={handleFormSubmit} style={{ width: \"100%\" }}>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your username here\"\r\n            name=\"username\"\r\n            label=\"Username\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            variant=\"outlined\"\r\n            inputProps={{\r\n              minLength: 3,\r\n              maxLength: 20,\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your email here\"\r\n            name=\"email\"\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            onChange={handleInputChange}\r\n            placeholder=\"Type your password here\"\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            inputProps={{\r\n              minLength: 6,\r\n              maxLength: 20,\r\n            }}\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <TextField\r\n            onChange={handleInputChange}\r\n            placeholder=\"Re-type your password here\"\r\n            label=\"Password\"\r\n            name=\"confirmPassword\"\r\n            type=\"password\"\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            inputProps={{\r\n              minLength: 6,\r\n              maxLength: 20,\r\n            }}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            required\r\n            fullWidth\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={12}>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" fullWidth>\r\n            Register\r\n          </Button>\r\n        </Grid>\r\n      </form>\r\n    </Grid>\r\n  );\r\n}\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   RegisterUser: (payload) => {\r\n//     dispatch(RegisterUser(payload));\r\n//   },\r\n// });\r\nexport default Signup;\r\n","import React from \"react\";\r\nimport { TextField, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport TabPanel from \"./../components/TabPanel\";\r\nimport Login from \"./../components/Login\";\r\nimport SignUp from \"./../components/Signup\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction a11yProps(def) {\r\n  return {\r\n    id: `registration-${def}`,\r\n    \"aria-controls\": `registration-${def}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  registrationContainer: {\r\n    flexDirection: \"row-reverse\",\r\n    height: \"100%\",\r\n    margin: \"20px 80px 10px 80px\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n\r\n  registration: {\r\n    width: \"50%\",\r\n    minHeight: \"600px\",\r\n    flex: 1,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      width: \"100%\",\r\n    },\r\n  },\r\n\r\n  image: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n  },\r\n}));\r\nfunction Registration({ login }, ...props) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [value, setValue] = React.useState(0);\r\n  React.useEffect(() => {\r\n    if (login.isLoggedIn) {\r\n      history.push(`/home/${login.user.name}`);\r\n    }\r\n  });\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.registrationContainer}>\r\n      <div className={classes.registration}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"simple tabs example\"\r\n        >\r\n          <Tab label=\"Sign Up\" {...a11yProps(0)} />\r\n          <Tab label=\"Log in\" {...a11yProps(1)} />\r\n        </Tabs>\r\n        <TabPanel value={value} index={0}>\r\n          <SignUp />\r\n        </TabPanel>\r\n        <TabPanel value={value} index={1}>\r\n          <Login />\r\n        </TabPanel>\r\n      </div>\r\n      <div style={{ width: \"50%\", flex: 1 }}>\r\n        <img className={classes.image} src=\"/assets/form.svg\"></img>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ login }) => {\r\n  return {\r\n    login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, null)(Registration);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fetchCurrentUser } from \"./../actions/index\";\r\n\r\nfunction AppContainer({ currentUser, fetchCurrentUser, ...props }) {\r\n  const history = useHistory();\r\n  //   async function persistLogin() {\r\n  //     const {\r\n  //       data: { user },\r\n  //       status,\r\n  //     } = await getCurrentUser();\r\n  //     if (status === 200) {\r\n  //       await setCurrentUser(user);\r\n  //     }\r\n  //   }\r\n  function isEmpty(obj) {\r\n    for (var prop in obj) {\r\n      if (obj.hasOwnProperty(prop)) return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n  const jwt = localStorage.getItem(\"jwt-token\");\r\n\r\n  useEffect(() => {\r\n    if (!jwt) {\r\n      history.push(\"/\");\r\n    } else {\r\n      if (isEmpty(currentUser.user)) {\r\n        fetchCurrentUser();\r\n      }\r\n    }\r\n  }, [jwt]);\r\n  return <>{props.children}</>;\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => ({\r\n  fetchCurrentUser: () => dispatch(fetchCurrentUser()),\r\n});\r\nconst mapStateToProps = ({ login, router }) => ({\r\n  currentUser: login,\r\n  location: router.location.pathname,\r\n});\r\nexport default connect(mapStateToProps, MapDispatchToProps)(AppContainer);\r\n","import React, { useState, useRef } from \"react\";\r\nimport { CreateNewBoard } from \"../utils/api\";\r\nimport {\r\n  Paper,\r\n  TextField,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./CreateBoard.css\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nfunction CreateBoard({ login, getAllBoards }) {\r\n  const [openBoard, setOpenBoard] = useState(false);\r\n  const [boardName, setBoardName] = useState(\"\");\r\n  const [boardColor, setBoardColor] = useState(\"rgb(0, 121, 191)\");\r\n  const cardRef = useRef(null);\r\n\r\n  const handleOpenBoard = () => {\r\n    setOpenBoard((prevState) => !prevState);\r\n  };\r\n\r\n  const handleBoardNameChange = (ev) => {\r\n    setBoardName(ev.target.value);\r\n  };\r\n\r\n  const handleColorChange = (ev) => {\r\n    cardRef.current.style.backgroundColor = ev.target.style.backgroundColor;\r\n    setBoardColor(ev.target.style.backgroundColor);\r\n  };\r\n  const handleBoardSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    await CreateNewBoard({ boardName, boardColor });\r\n    await getAllBoards(login.user.name);\r\n  };\r\n  return (\r\n    <>\r\n      <Paper elevation={3} className=\"paper\">\r\n        <div onClick={handleOpenBoard} className=\"board-overlay\"></div>\r\n        Create New Board\r\n      </Paper>\r\n      <div className={openBoard ? \"boardOpen\" : \"boardClose\"}>\r\n        <form onSubmit={handleBoardSubmit} className=\"form-container\">\r\n          <Card\r\n            style={{\r\n              maxHeight: \"140px\",\r\n              minWidth: \"300px\",\r\n              margin: 20,\r\n              color: \"white\",\r\n            }}\r\n          >\r\n            <CardHeader\r\n              style={{ padding: 0, color: \"white\" }}\r\n              subheader=\"Create your board\"\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  onClick={() => setOpenBoard(false)}\r\n                  ref={cardRef}\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent style={{ padding: 10 }}>\r\n              <TextField\r\n                name=\"boardName\"\r\n                value={boardName}\r\n                onChange={handleBoardNameChange}\r\n                fullWidth\r\n                label=\"Board name*\"\r\n              />\r\n            </CardContent>\r\n            <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n              Create\r\n            </Button>\r\n          </Card>\r\n\r\n          <div\r\n            style={{\r\n              height: \"96px\",\r\n              marginTop: \"20px\",\r\n              width: \"100px\",\r\n            }}\r\n          >\r\n            <div className=\"background-grid\">\r\n              <div className=\"background-grid-items\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"background-button\"\r\n                  onClick={handleColorChange}\r\n                  style={{ backgroundColor: \"rgb(176, 70, 50)\" }}\r\n                ></button>\r\n              </div>\r\n              <div className=\"background-grid-items\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"background-button\"\r\n                  onClick={handleColorChange}\r\n                  style={{ backgroundColor: \"rgb(0, 121, 191)\" }}\r\n                ></button>\r\n              </div>\r\n              <div className=\"background-grid-items\">\r\n                <button\r\n                  onClick={handleColorChange}\r\n                  type=\"button\"\r\n                  className=\"background-button\"\r\n                  style={{ backgroundColor: \"rgb(210, 144, 52)\" }}\r\n                ></button>\r\n              </div>\r\n              <div className=\"background-grid-items\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"background-button\"\r\n                  onClick={handleColorChange}\r\n                  style={{ backgroundColor: \"rgb(81, 152, 57)\" }}\r\n                ></button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ login }) => ({\r\n  login,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(CreateBoard);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  InputBase,\r\n  Badge,\r\n  MenuItem,\r\n  Menu,\r\n  Typography,\r\n  IconButton,\r\n  Popover,\r\n} from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n\r\nimport {\r\n  Add,\r\n  Search,\r\n  AccountCircle,\r\n  Notifications,\r\n  More,\r\n  Info,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { LogOutUser } from \"../../actions/index\";\r\nimport \"./Header.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    display: \"none\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"block\",\r\n    },\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(3),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: \"20ch\",\r\n    },\r\n  },\r\n  sectionDesktop: {\r\n    display: \"flex\",\r\n  },\r\n}));\r\n\r\nfunction Header({ logOut, login }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  // Popover\r\n  const [anchorPopOverEl, setAnchorPopOverEl] = React.useState(null);\r\n\r\n  const open = Boolean(anchorPopOverEl);\r\n  const id = open ? \"trello-popover\" : undefined;\r\n  // popover end\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n\r\n  const isMenuOpen = Boolean(anchorEl);\r\n\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMenuClose = (ev) => {\r\n    console.log(ev.target.to);\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const menuId = \"primary-search-account-menu\";\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose} name=\"profile\">\r\n        Profile\r\n      </MenuItem>\r\n      <MenuItem onClick={handleMenuClose}>My account</MenuItem>\r\n      <MenuItem\r\n        onClick={() => {\r\n          logOut();\r\n        }}\r\n      >\r\n        Log out\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" style={{ backgroundColor: \"#026aa7\" }}>\r\n        <Toolbar style={{ minHeight: 0 }}>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={() => {\r\n              history.push(\"/home/\" + login.user.name);\r\n            }}\r\n          >\r\n            <HomeIcon />\r\n          </IconButton>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            TRELLO\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <div className={classes.searchIcon}>\r\n              <Search />\r\n            </div>\r\n            <InputBase\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ \"aria-label\": \"search\" }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Add />\r\n            </IconButton>\r\n            <IconButton\r\n              aria-label=\"info \"\r\n              color=\"inherit\"\r\n              onClick={(event) => {\r\n                setAnchorPopOverEl(event.currentTarget);\r\n              }}\r\n            >\r\n              {/* <Badge badgeContent={17} color=\"secondary\"> */}\r\n              <Info />\r\n              {/* </Badge> */}\r\n            </IconButton>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <AccountCircle />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Popover\r\n        id={id}\r\n        open={open}\r\n        anchorEl={anchorPopOverEl}\r\n        onClose={() => {\r\n          setAnchorPopOverEl(null);\r\n        }}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"center\",\r\n        }}\r\n      >\r\n        <Typography style={{ textAlign: \"center\" }}>Information!</Typography>\r\n        <img\r\n          className=\"information-img\"\r\n          src=\"https://a.trellocdn.com/prgb/dist/images/tips/info-image-02@1x.d554cbf6d240549b8ef0.png\"\r\n          srcset=\"https://a.trellocdn.com/prgb/dist/images/tips/info-image-02@1x.d554cbf6d240549b8ef0.png 1x, https://a.trellocdn.com/prgb/dist/images/tips/info-image-02@2x.dc2ae20f9f00051bb6d4.png 2x\"\r\n          alt=\"\"\r\n          role=\"presentation\"\r\n        ></img>\r\n      </Popover>\r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  logOut: () => dispatch(LogOutUser()),\r\n});\r\nconst mapStateToProps = ({ login }) => ({\r\n  login,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React, { useEffect } from \"react\";\r\nimport { Grid, Button, makeStyles, Paper, Typography } from \"@material-ui/core\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport CreateBoard from \"./../components/CreateBoard\";\r\nimport { connect } from \"react-redux\";\r\nimport { getAllBoards } from \"../actions/index\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Home, Dashboard } from \"@material-ui/icons\";\r\nimport Header from \"../components/Header/Header\";\r\nimport \"./MainPage.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  mainContainer: {\r\n    padding: \"40px 10%\",\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"40px 0\",\r\n    },\r\n  },\r\n  sideBar: {\r\n    minWidth: \"200px\",\r\n\r\n    \"& ul\": {\r\n      listStyleType: \"none\",\r\n      marginRight: \"20px\",\r\n      \"& li\": {\r\n        padding: \"10px 0\",\r\n        backgroundColor: \"#e4f0f6\",\r\n        margin: \"0px 3px 3px 5px\",\r\n        borderRadius: \"5px\",\r\n        \"& a\": {\r\n          textDecoration: \"none\",\r\n          color: \"#0079bf\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n        },\r\n      },\r\n    },\r\n  },\r\n  gridItems: {\r\n    minHeight: \"100px\",\r\n    minWidth: \"200px\",\r\n  },\r\n  paper: {\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"rgba(9,30,66,.04)\",\r\n      transition: \"all 85ms ease\",\r\n    },\r\n    \"& a\": {\r\n      textDecoration: \"none\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction MainPage({ login, getAllBoards, boards, location }) {\r\n  const { user } = useParams();\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    document.title = \"Home | \" + login.user.name;\r\n    getAllBoards(user);\r\n  }, [login.user.name]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <main style={{ height: \"100%\", position: \"relative\" }}>\r\n        <div className={classes.mainContainer}>\r\n          <div className={classes.sideBar}>\r\n            <ul>\r\n              <li>\r\n                <NavLink to={`/home/${login.user.name}`}>\r\n                  <Dashboard />\r\n                  Boards\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink to={`/home/${login.user.name}`}>\r\n                  <Home />\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <Grid container spacing={2}>\r\n            {boards.map((board) => {\r\n              return (\r\n                <Grid\r\n                  key={board._id}\r\n                  item\r\n                  md={2}\r\n                  sm={6}\r\n                  xs={10}\r\n                  className={classes.gridItems}\r\n                >\r\n                  <Paper\r\n                    elevation={3}\r\n                    style={{ backgroundColor: `${board.backgroundColor}` }}\r\n                    className={classes.paper}\r\n                  >\r\n                    <Link\r\n                      to={`/boards/${board.name}`}\r\n                      style={{\r\n                        position: \"absolute\",\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                      }}\r\n                    />\r\n                    <Typography\r\n                      style={{ color: \"white\", fontWeight: 1000 }}\r\n                      component=\"h2\"\r\n                    >\r\n                      {board.name}\r\n                    </Typography>\r\n                  </Paper>\r\n                </Grid>\r\n              );\r\n            })}\r\n\r\n            <Grid item md={2} sm={6} xs={10} className={classes.gridItems}>\r\n              <CreateBoard getAllBoards={getAllBoards} />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\nconst mapStateToProps = ({ login, boards, router }) => ({\r\n  login,\r\n  boards: boards.boards,\r\n  location: router,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAllBoards: (payload) => {\r\n    dispatch(getAllBoards(payload));\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\r\n","import React from \"react\";\r\n\r\nconst page404 = () => {\r\n  return <div className=\"404\">404 Not Found</div>;\r\n};\r\n\r\nexport default page404;\r\n","import React, { useState } from \"react\";\r\nimport { TextareaAutosize, Button, IconButton } from \"@material-ui/core\";\r\nimport { Close, DeleteForever } from \"@material-ui/icons\";\r\nimport { updateCardItems, deleteCardItems } from \"../utils/api\";\r\nimport { green, red, pink } from \"@material-ui/core/colors\";\r\n\r\nconst style = {\r\n  textarea: {\r\n    resize: \"none\",\r\n    overflow: \"hidden\",\r\n    borderImage: \"none\",\r\n    borderRadius: \"6px 6px 6px 6px\",\r\n    borderStyle: \"none solid solid none\",\r\n    borderWidth: \"medium 1px 1px medium\",\r\n    boxShadow: \"0 1px 2px rgba(0, 0, 0, 0.12) inset\",\r\n    color: \"#555555\",\r\n    fontSize: \"1.2em\",\r\n    lineHeight: \"1.4em\",\r\n    padding: \"5px 8px\",\r\n  },\r\n  container: {\r\n    position: \"absolute\",\r\n    height: \"calc(100% - 50px)\",\r\n    width: \"100%\",\r\n  },\r\n};\r\n\r\nconst UpdateOverlay = ({\r\n  overlayVar,\r\n  setOverlay,\r\n  overlay,\r\n  getSpecificBoard,\r\n}) => {\r\n  const [value, setValue] = useState(\"\");\r\n  const handleSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    await updateCardItems({ ...overlayVar, value });\r\n    await getSpecificBoard();\r\n    setOverlay(!overlay);\r\n  };\r\n\r\n  const handleDelete = async (ev) => {\r\n    ev.preventDefault();\r\n    await deleteCardItems({ ...overlayVar });\r\n    await getSpecificBoard();\r\n    setOverlay(!overlay);\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-overlay-container\" style={style.container}>\r\n      <div\r\n        className=\"relative-container\"\r\n        style={{\r\n          backgroundColor: \"rgba(0, 0, 0, 0.75)\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          position: \"relative\",\r\n        }}\r\n        // onClick={handleMousePos}\r\n      >\r\n        <div\r\n          className=\"update-overlay\"\r\n          style={{\r\n            transform: `translate3d(${overlayVar.x}px,${\r\n              overlayVar.y - 40\r\n            }px,0)`,\r\n            position: \"absolute\",\r\n            zIndex: 30,\r\n            display: \"flex\",\r\n          }}\r\n        >\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"textarea-container\">\r\n              <TextareaAutosize\r\n                onChange={(ev) => {\r\n                  setValue(ev.target.value);\r\n                }}\r\n                value={value}\r\n                rowsMin={5}\r\n                rowsMax={7}\r\n                cols={30}\r\n                style={style.textarea}\r\n              />\r\n            </div>\r\n\r\n            <Button type=\"submit\" color=\"secondary\" variant=\"contained\">\r\n              Save\r\n            </Button>\r\n          </form>\r\n          <div\r\n            className=\"update_options\"\r\n            style={{ display: \"flex\", flexDirection: \"column\" }}\r\n          >\r\n            <form onSubmit={handleDelete}>\r\n              <Button type=\"submit\" color=\"secondary\">\r\n                <DeleteForever style={{ color: red[500] }} />\r\n              </Button>\r\n            </form>\r\n            <IconButton\r\n              onClick={() => {\r\n                setOverlay(!overlay);\r\n              }}\r\n            >\r\n              <Close style={{ color: red[500] }} />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateOverlay;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { green } from \"@material-ui/core/colors\";\r\n\r\nconst GreenButton = withStyles((theme) => ({\r\n  root: {\r\n    color: \"white\",\r\n    backgroundColor: green[500],\r\n    \"&:hover\": {\r\n      backgroundColor: green[700],\r\n    },\r\n  },\r\n}))(Button);\r\n\r\nexport default GreenButton;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  TextField,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport \"./TodoCard.css\";\r\nimport { Add, Close, Edit } from \"@material-ui/icons\";\r\nimport { changeCardTitle } from \"./../utils/api\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport UpdateOverlay from \"./UpdateOverlay\";\r\nimport { connect } from \"react-redux\";\r\nimport { setSpecificBoards } from \"./../actions/index\";\r\nimport axios from \"axios\";\r\nimport getJwtToken from \"../utils/jwt\";\r\nimport GreenButton from \"../components/GreenButton\";\r\n\r\nfunction TodoCard({ card, updateBoards, overlayVar, setOverlay, setBoard }) {\r\n  const [todo, setTodo] = useState(\"\");\r\n  const [toggleAddTodo, setToggleAddTodo] = useState(false);\r\n  const [cardTitle, setCardTitle] = useState(card.name);\r\n  const [renderCardTitle, setRenderCardTitle] = useState(false);\r\n\r\n  // edit cards\r\n  const handleEditButton = (ev) => {\r\n    var rect = ev.currentTarget.getBoundingClientRect();\r\n    var x = ev.clientX;\r\n    var y = ev.clientY;\r\n    var cardId = card._id;\r\n    var itemId = ev.target\r\n      .closest(\"div\")\r\n      .parentNode.getAttribute(\"data-rbd-draggable-id\");\r\n    overlayVar({\r\n      x,\r\n      y,\r\n      cardId,\r\n      itemId,\r\n    });\r\n    setOverlay(true);\r\n  };\r\n\r\n  // card title submit\r\n  const handleCardTitleSubmit = async (ev) => {\r\n    if (ev.which === 13) {\r\n      ev.preventDefault();\r\n      const res = await changeCardTitle({ cardId: card._id, name: cardTitle });\r\n      setRenderCardTitle(false);\r\n      // if (res.status === 200) {\r\n      //   setBoard(res.data);\r\n      // }\r\n    }\r\n  };\r\n\r\n  const handleItemInputChange = (ev) => {\r\n    ev.persist();\r\n    setTodo(ev.target.value);\r\n  };\r\n\r\n  const handleItemSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    const payload = {\r\n      cardId: card._id,\r\n      item: todo,\r\n    };\r\n    const config = {\r\n      headers: {\r\n        Authorization: \"Bearer \" + getJwtToken(),\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n    await axios.post(\r\n      `http://localhost:5000/api/board/card/items`,\r\n      payload,\r\n      config\r\n    );\r\n    await updateBoards();\r\n    setTodo(\"\");\r\n  };\r\n  const getItemStyle = (isDragging, draggableStyle) => ({\r\n    // some basic styles to make the items look a bit nicer\r\n    userSelect: \"none\",\r\n    transform: isDragging ? \"rotate(20deg)\" : \"rotate(100deg)\",\r\n    color: isDragging ? \"red\" : \"black\",\r\n    // change background colour if dragging\r\n    // background: isDragging ? \"red\" : \"grey\",\r\n\r\n    // styles we need to apply on draggables\r\n    ...draggableStyle,\r\n  });\r\n  const getListStyle = (isDraggingOver) => ({\r\n    background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n    padding: 20,\r\n  });\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        backgroundColor: \"#ebecf0\",\r\n        maxHeight: \"600px\",\r\n        width: \"auto\",\r\n      }}\r\n    >\r\n      {!renderCardTitle ? (\r\n        <Typography\r\n          component=\"h2\"\r\n          variant=\"h5\"\r\n          style={{\r\n            padding: \"5px 16px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          onDoubleClick={() => {\r\n            setRenderCardTitle(!renderCardTitle);\r\n          }}\r\n        >\r\n          {card.name}\r\n        </Typography>\r\n      ) : (\r\n        <form>\r\n          <TextField\r\n            onKeyPress={handleCardTitleSubmit}\r\n            fullWidth\r\n            label=\"Card Title\"\r\n            value={cardTitle}\r\n            onChange={(ev) => {\r\n              setCardTitle(ev.target.value);\r\n            }}\r\n          />\r\n        </form>\r\n      )}\r\n\r\n      <Droppable droppableId={`${card._id}`}>\r\n        {(provided) => (\r\n          <CardContent\r\n            {...provided.droppableProps}\r\n            innerRef={provided.innerRef}\r\n            className=\"todo-cards\"\r\n          >\r\n            {card.items &&\r\n              card.items.map((item, i) => {\r\n                return (\r\n                  <Draggable\r\n                    draggableId={`${item._id}`}\r\n                    key={`${item._id}`}\r\n                    index={i}\r\n                  >\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        ref={provided.innerRef}\r\n                        style={getItemStyle(\r\n                          snapshot.isDragging,\r\n                          provided.draggableProps.style\r\n                        )}\r\n                      >\r\n                        <Paper\r\n                          square\r\n                          variant=\"outlined\"\r\n                          className=\"todo-card-item\"\r\n                        >\r\n                          <Typography\r\n                            style={{\r\n                              overflowWrap: \"break-word\",\r\n                              overflow: \"hidden\",\r\n                            }}\r\n                            component=\"h5\"\r\n                          >\r\n                            {item.item}\r\n                          </Typography>\r\n                          <IconButton\r\n                            id=\"iconButton\"\r\n                            onClick={handleEditButton}\r\n                          >\r\n                            <Edit />\r\n                          </IconButton>\r\n                        </Paper>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                );\r\n              })}\r\n            {provided.placeholder}\r\n            {!toggleAddTodo ? (\r\n              <div\r\n                className=\"card-composer\"\r\n                onClick={() => {\r\n                  setToggleAddTodo((prevState) => !prevState);\r\n                }}\r\n                style={{\r\n                  backgroundColor: \"transparent\",\r\n                }}\r\n              >\r\n                <a href=\"#\" className=\"card-composer-text\">\r\n                  <span>\r\n                    <Add className=\"card-composer-icon\" fontSize=\"large\" />\r\n                  </span>\r\n                  <p> Add a todo </p>\r\n                </a>\r\n              </div>\r\n            ) : (\r\n              <Paper\r\n                style={{\r\n                  padding: 10,\r\n                }}\r\n              >\r\n                <form onSubmit={handleItemSubmit}>\r\n                  <TextField\r\n                    fullWidth\r\n                    label=\"Add new todo\"\r\n                    value={todo}\r\n                    onChange={handleItemInputChange}\r\n                  />\r\n                  <br />\r\n                  <GreenButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Add\r\n                  </GreenButton>\r\n                  <IconButton\r\n                    onClick={() => {\r\n                      setToggleAddTodo((prevState) => !prevState);\r\n                    }}\r\n                  >\r\n                    <Close />\r\n                  </IconButton>\r\n                </form>\r\n              </Paper>\r\n            )}\r\n          </CardContent>\r\n        )}\r\n      </Droppable>\r\n    </Card>\r\n  );\r\n}\r\n\r\nconst MapDispatchToProps = (dispatch) => ({\r\n  setBoard: (payload) => {\r\n    dispatch(setSpecificBoards(payload));\r\n  },\r\n});\r\nexport default connect(null, MapDispatchToProps)(TodoCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { reOrderCardItems, addNewCard } from \"../utils/api\";\r\nimport TodoCard from \"../components/TodoCard\";\r\nimport { Grid, IconButton, Button, TextField, Paper } from \"@material-ui/core\";\r\nimport Header from \"../components/Header/Header\";\r\nimport { connect } from \"react-redux\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport UpdateOverlay from \"../components/UpdateOverlay\";\r\n\r\nimport { getSpecificBoard } from \"../actions/index\";\r\nimport axios from \"axios\";\r\nimport \"./Boards.css\";\r\n\r\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\r\n\r\nfunction Boards({ login, getOneBoard, boards: { specificBoard } }) {\r\n  const [cardName, setCardName] = useState(\"\");\r\n  let { boardName } = useParams();\r\n  const [overlay, setOverlay] = useState(false);\r\n\r\n  const [overlayVar, setOverlayVar] = useState({});\r\n\r\n  const [toggle, setToggle] = useState(false);\r\n  // toggle\r\n  const getOverlayVar = (payload) => {\r\n    setOverlayVar(payload);\r\n  };\r\n\r\n  const handleButtonToggle = (ev) => {\r\n    setToggle((prevState) => !prevState);\r\n  };\r\n\r\n  const getSpecificBoard = () => {\r\n    getOneBoard(boardName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = boardName;\r\n    getOneBoard(boardName);\r\n  }, []); //fires when cards changes\r\n\r\n  //handling input change\r\n  const handleInputChange = (ev) => {\r\n    setCardName(ev.target.value);\r\n  };\r\n\r\n  //handling submit\r\n  const handleCardNameSubmit = async (ev) => {\r\n    ev.preventDefault();\r\n    await addNewCard({ boardName: boardName, name: cardName });\r\n    await getOneBoard(boardName);\r\n  };\r\n  const onDragEnd = async (result) => {\r\n    const { destination, draggableId, source } = result;\r\n    if (!destination) return;\r\n    const payload = {\r\n      destination: destination.droppableId,\r\n      itemId: draggableId,\r\n      source: source.droppableId,\r\n    };\r\n\r\n    await getOneBoard(boardName);\r\n  };\r\n\r\n  return (\r\n    <section\r\n      className=\"boards\"\r\n      style={{\r\n        backgroundColor: `${specificBoard.backgroundColor}`,\r\n        height: \"100%\",\r\n      }}\r\n    >\r\n      <Header />\r\n      {overlay && (\r\n        <UpdateOverlay\r\n          overlayVar={overlayVar}\r\n          setOverlay={setOverlay}\r\n          overlay={overlay}\r\n          getSpecificBoard={getSpecificBoard}\r\n        />\r\n      )}\r\n\r\n      <div className=\"boards-container\">\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          {specificBoard.cards &&\r\n            specificBoard.cards.map((x) => {\r\n              return (\r\n                <div className=\"board-cards\" key={`${x._id}`}>\r\n                  <TodoCard\r\n                    setOverlay={setOverlay}\r\n                    updateBoards={getSpecificBoard}\r\n                    overlayVar={getOverlayVar}\r\n                    card={x}\r\n                  />\r\n                </div>\r\n              );\r\n            })}\r\n        </DragDropContext>\r\n\r\n        {!toggle ? (\r\n          <div className=\"board-cards\">\r\n            <Button\r\n              onClick={handleButtonToggle}\r\n              style={{ backgroundColor: \"hsla(0,0%,100%,.24)\" }}\r\n              fullWidth\r\n            >\r\n              <AddIcon />\r\n              Add a list\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"board-cards\">\r\n            <Paper style={{ backgroundColor: \"#ebecf0\", padding: 10 }}>\r\n              <form onSubmit={handleCardNameSubmit}>\r\n                <TextField\r\n                  placeholder=\"Enter a list name\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  value={cardName}\r\n                  onChange={handleInputChange}\r\n                />\r\n                <Button\r\n                  type=\"submit\"\r\n                  style={{ backgroundColor: \"#5aac44\", color: \"#fff\" }}\r\n                >\r\n                  Add\r\n                </Button>\r\n                <IconButton onClick={handleButtonToggle}>\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              </form>\r\n            </Paper>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ login, boards }) => ({\r\n  login,\r\n  boards,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getOneBoard: (payload) => {\r\n    dispatch(getSpecificBoard(payload));\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Boards);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"../components/Header/Header\";\r\nimport GreenButton from \"../components/GreenButton\";\r\nimport \"./Profile.css\";\r\nimport { TextField, Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange, deepPurple } from \"@material-ui/core/colors\";\r\nimport { updateCurrentUser } from \"../actions/index\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    \"& > *\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n\r\nconst Profile = ({ login, updateUser }) => {\r\n  const classes = useStyles();\r\n  const [currentUser, setCurrentUser] = useState({\r\n    username: \"\",\r\n    bio: \"\",\r\n  });\r\n  useEffect(() => {\r\n    setCurrentUser({ username: login.user.name, bio: login.user.bio });\r\n  }, [login.user.name]);\r\n\r\n  const handleUpdateSubmit = (ev) => {\r\n    ev.preventDefault();\r\n    updateUser(currentUser);\r\n  };\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"profile-container\">\r\n        <div className=\"profile-header\">\r\n          <Avatar className={classes.purple}>\r\n            {login.user.name && login.user.name[0]}\r\n            {login.user.name && login.user.name.split(\" \")[1][0]}\r\n          </Avatar>\r\n          <Typography variant=\"h5\" component=\"h3\">\r\n            {login.user.name}\r\n          </Typography>\r\n        </div>\r\n        <div className=\"profile-content\">\r\n          <div className=\"profile-content-container\">\r\n            <Typography\r\n              variant=\"h5\"\r\n              component=\"h4\"\r\n              gutterBottom\r\n              style={{ marginBottom: 50 }}\r\n            >\r\n              Manage your personal information\r\n            </Typography>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              About\r\n            </Typography>\r\n            <hr />\r\n            <div className=\"profile-form-container\">\r\n              <form onSubmit={handleUpdateSubmit}>\r\n                <div className=\"form-control\">\r\n                  <TextField\r\n                    id=\"username\"\r\n                    label=\"Username\"\r\n                    value={`${currentUser.username}`}\r\n                    onChange={(ev) => {\r\n                      ev.persist();\r\n                      setCurrentUser((prev) => ({\r\n                        ...prev,\r\n                        username: ev.target.value,\r\n                      }));\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                  <TextField\r\n                    id=\"bio\"\r\n                    label=\"Bio\"\r\n                    value={`${currentUser.bio}`}\r\n                    onChange={(ev) => {\r\n                      ev.persist();\r\n                      setCurrentUser((prev) => ({\r\n                        ...prev,\r\n                        bio: ev.target.value,\r\n                      }));\r\n                    }}\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    InputLabelProps={{\r\n                      shrink: true,\r\n                    }}\r\n                  />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                  <GreenButton\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    style={{ color: \"#fff\" }}\r\n                    fullWidth\r\n                  >\r\n                    Save\r\n                  </GreenButton>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ login }) => {\r\n  return { login };\r\n};\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  updateUser: (payload) => {\r\n    dispatch(updateCurrentUser(payload));\r\n  },\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction PrivateRoute({ component: Component, isLoggedIn, ...props }) {\r\n  return (\r\n    <Route\r\n      {...props}\r\n      render={(props) =>\r\n        isLoggedIn ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={{ pathname: `/`, state: { from: props.location } }} />\r\n        )\r\n      }\r\n    ></Route>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = ({ login: { isLoggedIn } }) => ({\r\n  isLoggedIn,\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(PrivateRoute);\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Switch, Route, BrowserRouter, useHistory } from \"react-router-dom\";\nimport Registration from \"./pages/Registration\";\nimport AppContainer from \"./components/AppContainer\";\nimport MainPage from \"./pages/MainPage\";\nimport { fetchCurrentUser, LogOutUser } from \"./actions/index\";\nimport page404 from \"./components/page404\";\nimport Boards from \"./pages/Boards\";\nimport Profile from \"./pages/Profile\";\nimport { connect } from \"react-redux\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport { getCurrentUser } from \"./utils/api\";\nimport { isTokenExpired } from \"./utils/jwt\";\n\nimport Header from \"./components/Header/Header\";\n\nfunction App({ currentUser, fetchCurrentUser, logOut }) {\n  const history = useHistory();\n\n  useEffect(() => {\n    const jwt = localStorage.getItem(\"jwt-token\");\n    if (jwt) {\n      if (isTokenExpired(jwt)) {\n        logOut();\n      } else {\n        fetchCurrentUser();\n      }\n    }\n  }, []);\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Registration} />\n      <Route exact path=\"/home/:user\" component={MainPage} />\n      <Route exact path=\"/boards/:boardName\" component={Boards} />\n      <Route path=\"/profile\" component={Profile} />\n      <Route component={page404} />\n    </Switch>\n  );\n}\n\nconst MapDispatchToProps = (dispatch) => ({\n  fetchCurrentUser: () => dispatch(fetchCurrentUser()),\n  logOut: () => dispatch(LogOutUser()),\n});\nconst mapStateToProps = ({ login }) => ({\n  currentUser: login,\n});\nexport default connect(mapStateToProps, MapDispatchToProps)(App);\n","import { USER } from \"../constants\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  isLoggedIn: false,\r\n  isLoading: true,\r\n  error: \"\",\r\n};\r\nexport const loginReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case USER.LOGIN_USER:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n      });\r\n    case USER.LOGIN_USER_OAUTH:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n      });\r\n    case USER.UPDATE_CURRENT_USER:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        user: action.payload,\r\n      });\r\n    case USER.LOGIN_USER_SUCCESS:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        isLoading: false,\r\n        user: action.payload,\r\n      });\r\n    case USER.LOGIN_USER_ERROR:\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        error: \"LOGIN ERROR\",\r\n      });\r\n    case USER.LOGOUT_USER:\r\n      localStorage.removeItem(\"jwt-token\");\r\n      window.location = \"/\";\r\n      return Object.assign({}, state, {\r\n        ...state,\r\n        user: {},\r\n        isLoggedIn: false,\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default { loginReducer };\r\n","import { BOARDS } from \"../constants\";\r\nconst initialState = {\r\n  boards: [],\r\n  specificBoard: {},\r\n  error: \"\",\r\n};\r\nexport const boardsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case BOARDS.GET_ALL_BOARDS_SUCCESS:\r\n      return { ...state, boards: [...action.payload] };\r\n    case BOARDS.GET_ALL_BOARDS_ERROR:\r\n      const error = action.payload;\r\n      return { ...state, error };\r\n    case BOARDS.GET_ONE_BOARD_SUCCESS:\r\n      const board = action.payload;\r\n      return { ...state, specificBoard: { ...board } };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { loginReducer } from \"./userReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { boardsReducer } from \"./boardsReducer\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nconst rootReducer = (history) =>\r\n  combineReducers({\r\n    login: loginReducer,\r\n    router: connectRouter(history),\r\n    boards: boardsReducer,\r\n  });\r\n\r\nexport default rootReducer;\r\n","import { fork, call, put, takeLatest, takeEvery } from \"redux-saga/effects\";\r\nimport { push } from \"connected-react-router\";\r\nimport { getAllBoards, getSpecificBoard } from \"../utils/api\";\r\nimport {\r\n  setGetBoardsError,\r\n  setGetBoardsSuccess,\r\n  setSpecificBoards,\r\n} from \"../actions/index\";\r\nimport { BOARDS } from \"../constants\";\r\n\r\nfunction* callGetAllBoards(action) {\r\n  try {\r\n    const boards = yield call(getAllBoards, action.payload);\r\n    yield put(setGetBoardsSuccess(boards.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n    yield put(setGetBoardsError(err));\r\n  }\r\n}\r\n\r\nfunction* callGetOneBoard({ payload }) {\r\n  try {\r\n    const board = yield call(getSpecificBoard, payload);\r\n    console.log(board);\r\n    yield put(setSpecificBoards(board.data));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nfunction* boardsSaga() {\r\n  yield takeEvery(BOARDS.GET_ALL_BOARDS, callGetAllBoards);\r\n  yield takeEvery(BOARDS.GET_ONE_BOARD, callGetOneBoard);\r\n}\r\n\r\nexport default boardsSaga;\r\n","import {\r\n  fork,\r\n  call,\r\n  put,\r\n  takeLatest,\r\n  delay,\r\n  takeEvery,\r\n} from \"redux-saga/effects\";\r\nimport { push, replace } from \"connected-react-router\";\r\nimport {\r\n  fetchLoggedUser,\r\n  RegisterUser,\r\n  getCurrentUser,\r\n  loginOauth,\r\n  changeUserDetails,\r\n} from \"../utils/api\";\r\nimport {\r\n  setUser,\r\n  setUserError,\r\n  setRegisterError,\r\n  setRegisterSuccess,\r\n} from \"../actions/index\";\r\nimport { USER } from \"../constants\";\r\n\r\nfunction* fetchCurrentUser(action) {\r\n  try {\r\n    const {\r\n      data: { user },\r\n    } = yield call(getCurrentUser, action.payload);\r\n    yield put(setUser(user));\r\n    // yield put(push(`/home/${user.name}`));\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nfunction* LoginUser(action) {\r\n  try {\r\n    const { data, status } = yield call(fetchLoggedUser, action.payload);\r\n    switch (status) {\r\n      case 200:\r\n        localStorage.setItem(\"jwt-token\", data.token);\r\n        yield put(setUser(data.user));\r\n        // yield put(push(`/home/${data.user.name}`));\r\n        break;\r\n      case 403:\r\n        yield put(setUserError(\"Login Failed. Please Try Again\"));\r\n        break;\r\n\r\n      default:\r\n        return status;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(setUserError(\"Login Failed. Please Try Again\"));\r\n  }\r\n}\r\n\r\nfunction* updateUserDetails(action) {\r\n  try {\r\n    const { user, status } = yield call(changeUserDetails, action.payload);\r\n    if (status === 200) {\r\n      yield put(setUser(user));\r\n    }\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n}\r\nfunction* Oauth(action) {\r\n  try {\r\n    const { status, data } = yield call(loginOauth, action.payload);\r\n    console.log(data);\r\n    switch (status) {\r\n      case 200:\r\n        localStorage.setItem(\"jwt-token\", data.token);\r\n        yield put(setUser(data.user));\r\n        // yield put(push(`/home/${data.user.name}`));\r\n        break;\r\n      case 403:\r\n        yield put(setUserError(\"Login Failed. Please Try Again\"));\r\n        break;\r\n\r\n      default:\r\n        return status;\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put(setUserError(\"Login Failed. Please Try Again\"));\r\n  }\r\n}\r\n\r\nfunction* userSaga() {\r\n  yield takeLatest(USER.LOGIN_USER, LoginUser);\r\n  yield takeLatest(USER.LOGIN_USER_OAUTH, Oauth);\r\n  yield takeEvery(USER.UPDATE_CURRENT_USER, updateUserDetails);\r\n  yield takeLatest(USER.FETCH_CURRENT_USER, fetchCurrentUser);\r\n}\r\n\r\nexport default userSaga;\r\n","import boardsSaga from \"./boardsSaga\";\r\nimport userSaga from \"./userSaga\";\r\nimport { spawn, call, all } from \"redux-saga/effects\";\r\n\r\nfunction* rootSaga() {\r\n  const sagas = [userSaga, boardsSaga];\r\n\r\n  yield all(\r\n    sagas.map((saga) =>\r\n      spawn(function* () {\r\n        while (true) {\r\n          try {\r\n            yield call(saga);\r\n            break;\r\n          } catch (e) {\r\n            console.log(e);\r\n          }\r\n        }\r\n      })\r\n    )\r\n  );\r\n}\r\n\r\nexport default rootSaga;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootReducer from \"./reducers/rootReducer\";\nimport { Provider } from \"react-redux\";\nimport rootSaga from \"./sagas/rootSaga\";\nimport { createBrowserHistory } from \"history\";\nimport { BrowserRouter as Router, BrowserRouter } from \"react-router-dom\";\nimport { ConnectedRouter, routerMiddleware } from \"connected-react-router\";\n\nconst sagaMiddleware = createSagaMiddleware();\nconst history = createBrowserHistory();\n\nconst store = createStore(\n  rootReducer(history),\n  compose(\n    applyMiddleware(sagaMiddleware, routerMiddleware(history)),\n    window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__({\n        serialize: true,\n        trace: true,\n      })\n  )\n);\n\nsagaMiddleware.run(rootSaga);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <Router> */}\n      <ConnectedRouter history={history}>\n        <App />\n      </ConnectedRouter>\n      {/* </Router> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}